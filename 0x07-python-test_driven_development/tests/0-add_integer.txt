This is a test for 0-add_integer module
========================================

Using ''add_integer()'' function
========================================
Importing the function from the module:
	>>> add_integer = __import__("0-add_integer").add_integer

Checking for module docstring:
	 >>> c = __import__("0-add_integer").__doc__
	 >>> len(c) > 1
	 True

Checking for function docstring:
	 >>> i = __import__("0-add_integer").add_integer.__doc__
         >>> len(i) > 1
         True

Checking regular addition:
	 >>> add_integer(6, 3)
	 9

Checking positive with negative:
	 >>> add_integer(2, -8)
	 -6

Checking negative with positive:
	 >>> add_integer(-4, 8)
	 4

Checking float with int:
	 >>> add_integer(3.1, 4)
	 7

Checking int with float:
	 >>> add_integer(9, 7.8)
	 16

Checking both float:
	 >>> add_integer(3.45, 1.1)
	 4

Checking multiple values:
	 >>> [add_integer(i, i ** 2) for i in range(6)]
	 [0, 2, 6, 12, 20, 30]

Checking for passed NaN:
	 >>> add_integer(1, float('nan'))
	 Traceback (most recent call last):
	 ...
	 ValueError: cannot convert float NaN to integer

Checking for passed inf:
	 >>> add_integer(1, float('inf'))
	 Traceback (most recent call last):
	 ...
	 OverflowError: cannot convert float infinity to integer

Checking alpharbets with number:
	 >>> add_integer([2], 2)
	 Traceback (most recent call last):
	 ...
	 TypeError: a must be an integer

Checking number with string:
	 >>> add_integer(6, "2")
	 Traceback (most recent call last):
	 ...
	 TypeError: b must be an integer

Checking string with string:
	 >>> add_integer((5,), {"key": "value"})
         Traceback (most recent call last):
         ...
         TypeError: a must be an integer

Checking boolean with number:
	 >>> add_integer(True, 2)
	 Traceback (most recent call last):
         ...
         TypeError: a must be an integer

checking addition of dictionarys
        >>> add_integer({"add": 3}, float(5))
        Traceback (most recent call last):
	...
        TypeError: a must be an integer

Checking number with boolean:
	 >>> add_integer(0, False)
         Traceback (most recent call last):
         ...
         TypeError: b must be an integer

Checking no argument is passed:
	 >>> add_integer()
	 Traceback (most recent call last):
	 ...
	 TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'

Checking one argument:
	 >>> add_integer(1)
	 Traceback (most recent call last):
         ...
	 TypeError: add_integer() missing 1 required positional argument: 'b'

Checking more than 2 arguments:
	 >>> add_integer(1, 2, 3)
         Traceback (most recent call last):
         ...
         TypeError: add_integer() takes 2 positional arguments but 3 were given
